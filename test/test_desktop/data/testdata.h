#include <stdint.h>

// Aidon
uint8_t axdr1Data[] = {
  0x7e, 0xa2, 0x43, 0x41, 0x08, 0x83, 0x13, 0x85, 0xeb, 
  0xe6, 0xe7, 0x00, 0x0f, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x1b, // Array
    0x02, 0x02, // 1 Struct
      0x09, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0xff, // OBIS
      0x09, 0x0c, 0x07, 0xe4, 0x0b, 0x08, 0x00, 0x0c, 0x18, 0x28, 0xff, 0x80, 0x00, 0xff, // Datetime
    0x02, 0x03, // 2
      0x09, 0x06, 0x01, 0x00, 0x01, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x05, 0x17, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 3
      0x09, 0x06, 0x01, 0x00, 0x02, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00,
        0x16, 0x1b, 
    0x02, 0x03, // 4
      0x09, 0x06, 0x01, 0x00, 0x03, 0x07, 0x00, 0xff,
      0x06, 0x00, 0x00, 0x00, 0x92, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1d, 
    0x02, 0x03, // 5
      0x09, 0x06, 0x01, 0x00, 0x04, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1d, 
    0x02, 0x03, // 6
      0x09, 0x06, 0x01, 0x00, 0x1f, 0x07, 0x00, 0xff, 
      0x10, 0x00, 0x19, 
      0x02, 0x02, 
        0x0f, 0xff, 
        0x16, 0x21, 
    0x02, 0x03, // 7
      0x09, 0x06, 0x01, 0x00, 0x33, 0x07, 0x00, 0xff, 
      0x10, 0x00, 0x19, 
      0x02, 0x02, 
        0x0f, 0xff, 
        0x16, 0x21, 
    0x02, 0x03, // 8
      0x09, 0x06, 0x01, 0x00, 0x47, 0x07, 0x00, 0xff, 
      0x10, 0x00, 0x0f, 
      0x02, 0x02, 
        0x0f, 0xff, 
        0x16, 0x21, 
    0x02, 0x03, // 9
      0x09, 0x06, 0x01, 0x00, 0x20, 0x07, 0x00, 0xff, 
      0x12, 0x09, 0x10, 
      0x02, 0x02, 
        0x0f, 0xff, 
        0x16, 0x23,
    0x02, 0x03, // 10
      0x09, 0x06, 0x01, 0x00, 0x34, 0x07, 0x00, 0xff, 
      0x12, 0x09, 0x28, 
      0x02, 0x02, 
        0x0f, 0xff, 
        0x16, 0x23, 
    0x02, 0x03, // 11
      0x09, 0x06, 0x01, 0x00, 0x48, 0x07, 0x00, 0xff, 
      0x12, 0x09, 0x29, 
      0x02, 0x02, 
        0x0f, 0xff,
        0x16, 0x23, 
    0x02, 0x03, // 12
      0x09, 0x06, 0x01, 0x00, 0x15, 0x07, 0x00, 0xff,
      0x06, 0x00, 0x00, 0x02, 0x31, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 13
      0x09, 0x06, 0x01, 0x00, 0x16, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 14
      0x09, 0x06, 0x01, 0x00, 0x17, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0xc3, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1d, 
    0x02, 0x03, // 15
      0x09, 0x06, 0x01, 0x00, 0x18, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00,
        0x16, 0x1d, 
    0x02, 0x03, // 16
      0x09, 0x06, 0x01, 0x00, 0x29, 0x07, 0x00, 0xff,
      0x06, 0x00, 0x00, 0x02, 0x18, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 17 
      0x09, 0x06, 0x01, 0x00, 0x2a, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 18 
      0x09, 0x06, 0x01, 0x00, 0x2b, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x01, 0x0a, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1d, 
    0x02, 0x03, // 19
      0x09, 0x06, 0x01, 0x00, 0x2c, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00,
        0x16, 0x1d, 
    0x02, 0x03, // 20
      0x09, 0x06, 0x01, 0x00, 0x3d, 0x07, 0x00, 0xff,
      0x06, 0x00, 0x00, 0x00, 0xd1, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 21
      0x09, 0x06, 0x01, 0x00, 0x3e, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1b, 
    0x02, 0x03, // 22
      0x09, 0x06, 0x01, 0x00, 0x3f, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1d, 
    0x02, 0x03, // 23
      0x09, 0x06, 0x01, 0x00, 0x40, 0x07, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x01, 0x36, 
      0x02, 0x02, 
        0x0f, 0x00,
        0x16, 0x1d, 
    0x02, 0x03, // 24
      0x09, 0x06, 0x01, 0x00, 0x01, 0x08, 0x00, 0xff,
      0x06, 0x00, 0x03, 0x38, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1e, 
    0x02, 0x03, // 25
      0x09, 0x06, 0x01, 0x00, 0x02, 0x08, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x00, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x1e, 
    0x02, 0x03, // 26
      0x09, 0x06, 0x01, 0x00, 0x03, 0x08, 0x00, 0xff, 
      0x06, 0x00, 0x00, 0x00, 0x0c, 
      0x02, 0x02, 
        0x0f, 0x00, 
        0x16, 0x20, 
    0x02, 0x03, // 27
      0x09, 0x06, 0x01, 0x00, 0x04, 0x08, 0x00, 0xff, 
      0x06, 0x00, 0x01, 0x03, 0x61, 
      0x02, 0x02, 
        0x0f, 0x00,
        0x16, 0x20, 
    0xd9, 0x0b, // CRC
    0x7e
};
// Kamstrup
uint8_t axdr2Data[] = {
  0x7E, 0xA0, 0xE3, 0x2B, 0x21, 0x13, 0x98, 0x86, 
  0xE6, 0xE7, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x09, 0x0C, 0x07, 0xE1, 0x0A, 0x14, 0x05, 0x03, 0x2B, 0x1E, 0xFF, 0x80, 0x00, 0x00, 
  0x02, 0x19, 
  0x0A, 0x0E, 0x4B, 0x61, 0x6D, 0x73, 0x74, 0x72, 0x75, 0x70, 0x5F, 0x56, 0x30, 0x30, 0x30, 0x31,
  0x09, 0x06, 0x01, 0x01, 0x00, 0x00, 0x05, 0xFF, 
  0x0A, 0x10, 0x35, 0x37, 0x30, 0x36, 0x35, 0x36, 0x37, 0x32, 0x37, 0x34, 0x33, 0x38, 0x39, 0x37, 0x30, 0x32, 
  0x09, 0x06, 0x01, 0x01, 0x60, 0x01, 0x01, 0xFF, 
  0x0A, 0x12, 0x36, 0x38, 0x34, 0x31, 0x31, 0x32, 0x31, 0x42, 0x4E, 0x32, 0x34, 0x33, 0x31, 0x30, 0x31, 0x30, 0x34, 0x30, 
  0x09, 0x06, 0x01, 0x01, 0x01, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x05, 0xBC, 
  0x09, 0x06, 0x01, 0x01, 0x02, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x00, 0x00, 
  0x09, 0x06, 0x01, 0x01, 0x03, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x00, 0x00, 
  0x09, 0x06, 0x01, 0x01, 0x04, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x01, 0xCE, 
  0x09, 0x06, 0x01, 0x01, 0x1F, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x02, 0x34, 
  0x09, 0x06, 0x01, 0x01, 0x33, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x00, 0xCA, 
  0x09, 0x06, 0x01, 0x01, 0x47, 0x07, 0x00, 0xFF, 
  0x06, 0x00, 0x00, 0x01, 0xFF, 
  0x09, 0x06, 0x01, 0x01, 0x20, 0x07, 0x00, 0xFF, 
  0x12, 0x00, 0xE8, 
  0x09, 0x06, 0x01, 0x01, 0x34, 0x07, 0x00, 0xFF, 
  0x12, 0x00, 0xE4, 
  0x09, 0x06, 0x01, 0x01, 0x48, 0x07, 0x00, 0xFF, 
  0x12, 0x00, 0xE9, 
  0xA1, 0xA5, 
  0x7E};
// Kaifa
uint8_t axdr3Data[] = {
0x7E, 0xA0, 0x27, 0x01, 0x02, 0x01, 0x10, 0x5A, 0x87, 
0xE6, 0xE7, 0x00, 0x0F, 0x40, 0x00, 0x00, 0x00, 
0x09, 0x0C, 0x07, 0xE1, 0x09, 0x0C, 0x02, 0x17, 0x12, 0x2C, 0xFF, 0x80, 0x00, 0x00, 
0x02, 0x01, 
0x06, 0x00, 0x00, 0x05, 0x24, 
0x19, 0xC1, 
0x7E
};
uint8_t axdr4Data[] = {
0x7E, 0xA0, 0x79, 0x01, 0x02, 0x01, 0x10, 0x80, 0x93, 
0xE6, 0xE7, 0x00, 0x0F, 0x40, 0x00, 0x00, 0x00, 
0x09, 0x0C, 0x07, 0xE1, 0x09, 0x0C, 0x02, 0x17, 0x12, 0x32, 0xFF, 0x80, 0x00, 0x00, 
0x02, 0x0D, 
0x09, 0x07, 0x4B, 0x46, 0x4D, 0x5F, 0x30, 0x30, 0x31, 
0x09, 0x10, 0x36, 0x39, 0x37, 0x30, 0x36, 0x33, 0x31, 0x34, 0x30, 0x31, 0x37, 0x35, 0x33, 0x39, 0x38, 0x35, 
0x09, 0x08, 0x4D, 0x41, 0x33, 0x30, 0x34, 0x48, 0x33, 0x45, 
0x06, 0x00, 0x00, 0x05, 0x24, 
0x06, 0x00, 0x00, 0x00, 0x00, 
0x06, 0x00, 0x00, 0x00, 0x00, 
0x06, 0x00, 0x00, 0x00, 0x81, 
0x06, 0x00, 0x00, 0x06, 0xD2, 
0x06, 0x00, 0x00, 0x11, 0xD5, 
0x06, 0x00, 0x00, 0x12, 0x68, 
0x06, 0x00, 0x00, 0x09, 0x60, 
0x06, 0x00, 0x00, 0x00, 0x00, 
0x06, 0x00, 0x00, 0x09, 0x62,
0x4B, 0xDB, 
0x7E};

uint8_t ascii1Data[] =
  "/KFM5KAIFA-METER\r\n"
  "\r\n"
  "1-3:0.2.8(40)\r\n"
  "0-0:1.0.0(150117185916W)\r\n"
  "0-0:96.1.1(0000000000000000000000000000000000)\r\n"
  "1-0:1.8.1(000671.578*kWh)\r\n"
  "1-0:1.8.2(000842.472*kWh)\r\n"
  "1-0:2.8.1(000000.000*kWh)\r\n"
  "1-0:2.8.2(000000.000*kWh)\r\n"
  "0-0:96.14.0(0001)\r\n"
  "1-0:1.7.0(00.333*kW)\r\n"
  "1-0:2.7.0(00.000*kW)\r\n"
  "0-0:17.0.0(999.9*kW)\r\n"
  "0-0:96.3.10(1)\r\n"
  "0-0:96.7.21(00008)\r\n"
  "0-0:96.7.9(00007)\r\n"
  "1-0:99.97.0(1)(0-0:96.7.19)(000101000001W)(2147483647*s)\r\n"
  "1-0:32.32.0(00000)\r\n"
  "1-0:32.36.0(00000)\r\n"
  "0-0:96.13.1()\r\n"
  "0-0:96.13.0()\r\n"
  "1-0:31.7.0(001*A)\r\n"
  "1-0:21.7.0(00.332*kW)\r\n"
  "1-0:22.7.0(00.000*kW)\r\n"
  "0-1:24.1.0(003)\r\n"
  "0-1:96.1.0(0000000000000000000000000000000000)\r\n"
  "0-1:24.2.1(150117180000W)(00473.789*m3)\r\n"
  "0-1:24.4.0(1)\r\n"
  "!6F4A";

  uint8_t ascii2Data[] = 
    "/ELL5\\253833635_A\r\n"
    "\r\n"
    "0-0:1.0.0(201020085222W)\r\n"
    "1-0:1.8.0(00001605.055*kWh)\r\n"
    "1-0:2.8.0(00000000.131*kWh)\r\n"
    "1-0:3.8.0(00000003.642*kvarh)\r\n"
    "1-0:4.8.0(00000185.707*kvarh)\r\n"
    "1-0:1.7.0(0006.000*kW)\r\n"
    "1-0:2.7.0(0000.000*kW)\r\n"
    "1-0:3.7.0(0000.200*kvar)\r\n"
    "1-0:4.7.0(0000.470*kvar)\r\n"
    "1-0:21.7.0(0003.172*kW)\r\n"
    "1-0:41.7.0(0000.441*kW)\r\n"
    "1-0:61.7.0(0002.386*kW)\r\n"
    "1-0:22.7.0(0000.000*kW)\r\n"
    "1-0:42.7.0(0000.000*kW)\r\n"
    "1-0:62.7.0(0000.000*kW)\r\n"
    "1-0:23.7.0(0000.000*kvar)\r\n"
    "1-0:43.7.0(0000.200*kvar)\r\n"
    "1-0:63.7.0(0000.000*kvar)\r\n"
    "1-0:24.7.0(0000.222*kvar)\r\n"
    "1-0:44.7.0(0000.000*kvar)\r\n"
    "1-0:64.7.0(0000.247*kvar)\r\n"
    "1-0:32.7.0(234.4*V)\r\n"
    "1-0:52.7.0(233.3*V)\r\n"
    "1-0:72.7.0(235.1*V)\r\n"
    "1-0:31.7.0(013.6*A)\r\n"
    "1-0:51.7.0(002.0*A)\r\n"
    "1-0:71.7.0(010.2*A)\r\n"
    "!80FF\r\n";

  uint8_t ascii3Data[] = 
    "/ELL5\\253833635_A\r\n"
    "\r\n"
    "0-0:1.0.0(201020085222W)\r\n"
    "1-0:1.8.0(00001605.055*kWh)\r\n"
    "1-0:2.8.0(00000000.131*kWh)\r\n"
    "1-0:3.8.0(00000003.642*kvarh)\r\n"
    "1-0:4.8.0(00000185.707*kvarh)\r\n"
    "1-0:1.7.0(0006.000*kW)\r\n"
    "1-0:2.7.0(0000.000*kW)\r\n"
    "1-0:3.7.0(0000.200*kvar)\r\n"
    "1-0:4.7.0(0000.470*kvar)\r\n"
    "1-0:21.7.0(0003.172*kW)\r\n"
    "1-0:41.7.0(0000.441*kW)\r\n"
    "1-0:61.7.0(0002.386*kW)\r\n"
    "1-0:22.7.0(0000.000*kW)\r\n"
    "1-0:42.7.0(0000.000*kW)\r\n"
    "1-0:62.7.0(0000.000*kW)\r\n"
    "1-0:23.7.0(0000.000*kvar)\r\n"
    "1-0:43.7.0(0000.200*kvar)\r\n"
    "1-0:63.7.0(0000.000*kvar)\r\n"
    "1-0:24.7.0(0000.222*kvar)\r\n"
    "1-0:44.7.0(0000.000*kvar)\r\n"
    "1-0:64.7.0(0000.247*kvar)\r\n"
    "1-0:32.7.0(234.4*V)\r\n"
    "1-0:52.7.0(233.3*V)\r\n"
    "1-0:72.7.0(235.1*V)\r\n"
    "!64C2\r\n";